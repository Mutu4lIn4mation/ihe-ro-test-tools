Class ReceiveScenarioStep
    Inherits ScenarioStep
    Implements IReceivedMessagesContainer

    Private m_ReceiveActor As Actor
    Private m_transactions As ArrayList = New ArrayList
    Protected m_receiver As Receiver
    Private m_reporter As Reporter
    Private m_dimseCommand As DvtkData.Dimse.DimseCommand

    Public Sub New(ByVal receiveActor As Actor, ByVal sendActor As Actor, ByVal dimseCommand As DvtkData.Dimse.DimseCommand)

        MyClass.New(receiveActor, sendActor, False)

    End Sub

    Public Sub New(ByVal receiveActor As Actor, ByVal sendActor As Actor, ByVal usePortConfiguration As Boolean)

        MyClass.New(receiveActor, sendActor, usePortConfiguration, Nothing, Nothing)

    End Sub

    Public Sub New(ByVal receiveActor As Actor, ByVal sendActor As Actor, ByVal usePortConfiguration As Boolean, ByVal dimseCommand As DvtkData.Dimse.DimseCommand)

        MyClass.New(receiveActor, sendActor, usePortConfiguration, Nothing, dimseCommand)

    End Sub

    Public Sub New(ByVal receiveActor As Actor, ByVal sendActor As Actor, ByVal usePortConfiguration As Boolean, ByVal secondReceiveActor As Actor, ByVal dimseCommand As DvtkData.Dimse.DimseCommand)

        m_ReceiveActor = receiveActor
        m_receiver = New Receiver(receiveActor, sendActor, usePortConfiguration, secondReceiveActor, dimseCommand)
        m_reporter = Reporter.GetInstance()
        m_dimseCommand = dimseCommand
    End Sub

    ' - receiving transactions from the receiver (Receiver)
    Public Overrides Sub Execute()
        Dim config As TestToolConfiguration = TestToolConfiguration.GetInstance()

        If m_transactions.Count > 0 Then
            m_receiver.ReceiveTransactions(m_transactions)
        End If

        If Not m_receiver.AllTransactionsReceived(m_transactions) Then
            Reporter.GetInstance.Report(m_receiver.MissingTransactions, ErrorSeverity.RuleError)
        End If
    End Sub

    'Add a transaction
    Public Sub AddTransaction(ByVal transaction As Transaction)
        m_transactions.Add(transaction)
    End Sub

    'The received messages of this scenario step
    Public ReadOnly Property ReceivedMessages() As DvtkHighLevelInterface.Dicom.Messages.DicomMessageCollection Implements IReceivedMessagesContainer.ReceivedMessages
        Get
            Return m_receiver.ReceivedMessages
        End Get
    End Property
End Class
