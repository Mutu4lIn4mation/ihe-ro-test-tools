Public Class EditQueryForm
    Public m_requestDataset As DvtkHighLevelInterface.Dicom.Other.DataSet
    Public selectedFile As String

    Private Sub EditQueryForm_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load

        'm_DateTimePickerStart.Value = DateTime.Now
        'm_DateTimePickerStart.Value.AddHours(-m_DateTimePickerStart.Value.Hour)
        m_DateTimePickerStart.Value = m_DateTimePickerStart.Value.AddSeconds(1)
        'm_DateTimePickerStart.Value.AddMilliseconds(-m_DateTimePickerStart.Value.Millisecond)

        m_DateTimePickerStop.Value = m_DateTimePickerStop.Value.AddHours(23)
        m_DateTimePickerStop.Value = m_DateTimePickerStop.Value.AddMinutes(59)
        m_DateTimePickerStop.Value = m_DateTimePickerStop.Value.AddSeconds(59)
        ' m_DateTimePickerStop.Value = m_DateTimePickerStop.Value.AddMilliseconds(9999)

        If m_requestDataset.Exists(Tags.PatientName) Then
            m_PatientsNameText.Text = m_requestDataset(Tags.PatientName).Values(0)
        End If

        If m_requestDataset.Exists(Tags.PatientID) Then
            m_PatientIDText.Text = m_requestDataset(Tags.PatientID).Values(0)
        End If

        ' load also the data already in the RQ
        If m_requestDataset.GetitemCount(Tags.ScheduledStationNameCodeSequence) > 0 Then
            If m_requestDataset.Exists(Tags.ScheduledStationCodeValue) Then
                m_CodeValueText.Text = m_requestDataset(Tags.ScheduledStationCodeValue).Values(0)
            End If
            If m_requestDataset.Exists(Tags.ScheduledStationCodingSchemeDesignator) Then
                m_CodeSchemeText.Text = m_requestDataset(Tags.ScheduledStationCodingSchemeDesignator).Values(0)
            End If
            'If m_requestDataset.Exists(Tags.ScheduledStationCodeMeaning) Then
            '    m_CodeMeaningText.Text = m_requestDataset(Tags.ScheduledStationCodeMeaning).Values(0)
            'End If
        End If

        If Not (String.IsNullOrEmpty(selectedFile)) Then
            tbNSetTemplatePath.Text = selectedFile
            OpenFileDialog1.FileName = selectedFile

            Dim file As System.IO.FileInfo = New System.IO.FileInfo(selectedFile)

            OpenFileDialog1.InitialDirectory = file.DirectoryName
        End If
    End Sub

    Private Sub m_SendButton_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles m_SendButton.Click

        If (Not (m_CodeValueText.Text = "" And m_CodeSchemeText.Text = "")) And (Not ((m_CodeValueText.Text <> "" And m_CodeSchemeText.Text <> ""))) Then
            labelCodeValue.Visible = True
        Else
            changeRequestDataset()
            Me.DialogResult = Windows.Forms.DialogResult.OK
            Me.Close()
        End If
        'create get message and send 
    End Sub


    Private Sub m_DateTimePickerStart_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles m_DateTimePickerStart.ValueChanged
        checkRange()
    End Sub

    Private Sub m_DateTimePickerStop_ValueChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles m_DateTimePickerStop.ValueChanged
        checkRange()
    End Sub

    Private Sub checkRange()
        If m_DateTimePickerStop.Value < m_DateTimePickerStart.Value Then
            warningLabel.Visible = True
            m_SendButton.Enabled = False
        Else
            warningLabel.Visible = False
            m_SendButton.Enabled = True
        End If
    End Sub

    Private Sub m_DateTimePickerStop_Validating(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles m_DateTimePickerStop.Validating

    End Sub

    Public Sub addMessage(ByVal dataset As DvtkHighLevelInterface.Dicom.Other.DataSet)
        m_requestDataset = dataset
    End Sub

    Private Sub changeRequestDataset()
        Dim range As String = m_DateTimePickerStart.Value.ToString("yyyyMMddHHmmss") + ".0000-" + m_DateTimePickerStop.Value.ToString("yyyyMMddHHmmss") + ".9999"
        'change the tags, also if the value used is empty
        m_requestDataset.Set(Tags.ScheduledProcedureStepStartDateandTime, DT, range)

        If Not m_CodeValueText.Text = "" And Not m_CodeSchemeText.Text = "" Then
            'm_requestDataset.Set(Tags.ScheduledStationCodeMeaning, LO, m_CodeMeaningText.Text)
            m_requestDataset.Set(Tags.ScheduledStationCodeValue, SH, m_CodeValueText.Text)
            m_requestDataset.Set(Tags.ScheduledStationCodingSchemeDesignator, SH, m_CodeSchemeText.Text)
            m_requestDataset.Set(Tags.ScheduledStationCodeMeaning, LO, "")
        Else
            'm_requestDataset.Set(Tags.ScheduledStationCodeValue, SH, "")
            'm_requestDataset.Set(Tags.ScheduledStationCodingSchemeDesignator, SH, "")
            'm_requestDataset.Set(Tags.ScheduledStationCodeMeaning, LO, "")

            If m_requestDataset.GetitemCount(Tags.ScheduledStationNameCodeSequence) > 0 Then
                m_requestDataset.Delete(Tags.ScheduledStationCodeMeaning)
                m_requestDataset.Delete(Tags.ScheduledStationCodeValue)
                m_requestDataset.Delete(Tags.ScheduledStationCodingSchemeDesignator)
            End If
        End If
        m_requestDataset.Set(Tags.PatientName, PN, m_PatientsNameText.Text)
        m_requestDataset.Set(Tags.PatientID, LO, m_PatientIDText.Text)
        'and save the request to the datadirectory (overwrite C-FIND-RQ)
    End Sub

    Private Sub Button2_Click(sender As System.Object, e As System.EventArgs) Handles Button2.Click
        Dim newThread As New System.Threading.Thread(AddressOf ThreadMethod)
        newThread.SetApartmentState(Threading.ApartmentState.STA)
        newThread.Start()

        'End If

    End Sub


    Sub ThreadMethod()

        If (OpenFileDialog1.ShowDialog() = DialogResult.OK) Then
            Me.SetText(OpenFileDialog1.FileName)
        End If

    End Sub

    Delegate Sub SetTextCallback(ByVal text As String)

    Private Sub SetText(ByVal [text] As String)

        'InvokeRequired required compares the thread ID of the
        'calling thread to the thread ID of the creating thread.
        'If these threads are different, it returns true.
        If Me.tbNSetTemplatePath.InvokeRequired Then
            Dim d As New SetTextCallback(AddressOf SetText)
            Me.Invoke(d, New Object() {[text]})
        Else

            If ([text].EndsWith(".dcm")) Then
                Me.selectedFile = [text]
                tbNSetTemplatePath.Text = [text]

                Dim C_FIND_REQ As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(CFINDRQ)
                'Read the Response
                C_FIND_REQ.DataSet.Read([text])
                addMessage(C_FIND_REQ.DataSet)
            Else
                MessageBox.Show("Selected file is not a DICOM file!")
            End If


        End If
    End Sub
End Class