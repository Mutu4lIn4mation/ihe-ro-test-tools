#If Not DVT_INTERPRETS_SCRIPT Then
Imports System.Collections.Generic
#End If

' Transaction RO-20 (Retrieval of worklist input objects from TMS) class
Class RO_20_Transaction
    Inherits Transaction
    'Constructor

    ''' <summary>
    ''' Ctor.
    ''' </summary>
    ''' <param name="SUTActor">The actor to which a C-MOVE-RQs is sent.</param>
    ''' <param name="storeActor">The actor that receives the C-STORE-RQs</param>
    ''' <remarks></remarks>
    ''' 
    Public Sub New(ByVal SUTActor As Actor, ByVal storeActor As Actor)

        MyBase.New("RO-20", "Retrieval of worklist input objects from TMS", IODType.StudyRootQueryRetrieveMOVE, True)
        m_sutActorId = SUTActor.Id 'for IPDW: TMS
        m_storeActorId = storeActor.Id 'for IPDW: PDS
    End Sub

    Public Sub New(ByVal SUTActor As Actor, ByVal storeActor As Actor, ByVal selectUPSForm As SelectUPS)

        MyBase.New("RO-20", "Retrieval of worklist input objects from TMS", IODType.StudyRootQueryRetrieveMOVE, True)
        m_sutActorId = SUTActor.Id 'for IPDW: TMS
        m_storeActorId = storeActor.Id 'for IPDW: PDS
        m_selectUPSForm = selectUPSForm
    End Sub

    Private m_sutActorId As String
    Private m_storeActorId As String
    Private m_selectUPSForm As SelectUPS
    'method which returns the related reference data messages belonging to this transaction
    Protected Overrides Function GetTransactionReferenceDataMessages() As System.Collections.ArrayList
        Dim datasetMessages As ArrayList = New ArrayList()
        Dim referenceData As ReferenceDataSet = ReferenceDataSet.GetInstance()

        For Each DataRow As DataGridViewRow In m_selectUPSForm.UPSDataGridView.Rows
            If (DataRow.Selected) Then

                Dim SOPInstanceUID As String = DataRow.Cells("SopInstanceUIDColumn").Value.ToString()

                Dim selectedUPS As DvtkHighLevelInterface.Dicom.Other.DataSet = referenceData.GetSelectedCFindRsp(SOPInstanceUID)

                Dim messages As DicomMessageCollection = referenceData.createCMoveRqUPS(DataSetHandler.UPSCacheXMLFileName, m_sutActorId, m_storeActorId, SOPInstanceUID)
                If messages.Count = 0 Then
                    'NO messages found in the C-FIND repsonses to retrieve from the SCP
                    Dim log As String = "The input information sequence has wrong references or the data is not availeble on the OST or TMS (it could be that the AeTitle in the C-FIND-RSP is not the same as the OST ae title in the configuration file."
                    Logger.GetInstance().LogErrorMessage(log)
                    Return Nothing
                Else
                    'add the structure set message to the arraylist
                    For Each message As DicomMessage In messages
                        datasetMessages.Add(message)
                    Next
                End If
                'return the array with dataset(s)
                Return datasetMessages

            End If
        Next

        Return datasetMessages
    End Function

    Public Function GetCommonTransactionRulesForCMOVERequest() As System.Collections.Generic.IEnumerable(Of Rule)
        Dim m_rules As List(Of Rule) = New List(Of Rule)

        '(0x00080052)  Query/Retrieve Level
        m_rules.Add(New ValueRule(Tags.QueryRetrieveLevel, "IMAGE", IODType.StudyRootQueryRetrieveMOVE, ErrorSeverity.RuleError))

        Return m_rules

    End Function

    ' This function returns all common rules that apply on a request of this transaction
    Public Function GetCommonTransactionRulesForCSTORERequest(ByVal upsIsTreatmentAndContinuation As Boolean) As System.Collections.Generic.IEnumerable(Of Rule)

        Dim rules As List(Of Rule) = New List(Of Rule)

        Dim values As String() = New String() {SOPclass.RTBeamsDeliveryInstructionSOPClassUID, SOPclass.RTTreatmentSummaryRecordSOPClassUID}
        rules.Add(New ValueListRule(Tags.SOPClassUID, values, IODType.CStoreRequest, ErrorSeverity.RuleError))


        If upsIsTreatmentAndContinuation Then

            rules.Add(New TreatmentDeliveryTypeRuleIPDWV2(IODType.RTBeamsDeliveryInstruction, ErrorSeverity.RuleError))

        End If

        Return rules

    End Function

End Class
