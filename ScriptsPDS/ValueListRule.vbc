Class ValueListRule
    Inherits AttributeRule
    ''' <summary>
    ''' this rule verifies if the value in this attribute is a correct one, according to the valuelist that is provided
    ''' </summary>
    ''' <param name="valueTag">the attribute that needs to be checked</param>
    ''' <param name="valueList">containes the values which the attribute may have</param>
    ''' <param name="iodType"></param>
    ''' <param name="severity"></param>
    ''' <remarks></remarks>

    Public Sub New(ByVal valueTag As String, ByVal valueList() As String, ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("Value List Rule", valueTag, iodType, severity)

        m_ValueList = valueList

    End Sub

    Private m_ValueList() As String

    Public Overrides Sub ApplyRule(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal iodType As IODType)
        Dim message As String = ""
        Dim n As Integer
        Dim found As Boolean = False
        If iodType = IODTypeRule Then


            If Not dicomMessage.Exists(m_TagSequence) Then
                message = "The attribute: '" + Tags.GetTagName(m_TagSequence) + "' (" + m_TagSequence + ") is not present."
                Me.SetValid(message)
            Else
                For n = 0 To m_ValueList.Length - 1
                    If dicomMessage(m_TagSequence).Values.Item(0) = m_ValueList(n) Then
                        message = "The attribute: '" + Tags.GetTagName(m_TagSequence) + "' (" + m_TagSequence + ") contains the value: " + m_ValueList(n) + "."
                        Me.SetValid(message)
                        found = True
                    End If
                Next
                If found = False Then
                    'create error message!
                    message = "The attribute: '" + Tags.GetTagName(m_TagSequence) + "' (" + m_TagSequence + ") does not contain one of the values:"
                    For n = 0 To m_ValueList.Length - 1
                        If n > 0 Then
                            message = message + " or"
                        End If
                        message = message + " " + m_ValueList(n)
                    Next
                    message = message + " ."
                    Me.SetError(message)
                End If
            End If
            Me.Report()
        End If
    End Sub

End Class
