Public Class FinalProgressUpdateContent

    Public selectedFile As String

    Private Sub FinalProgressUpdateContent_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        If Not (String.IsNullOrEmpty(selectedFile)) Then
            tbNSetTemplatePath.Text = selectedFile
            OpenFileDialog1.FileName = selectedFile

            Dim file As System.IO.FileInfo = New System.IO.FileInfo(selectedFile)

            OpenFileDialog1.InitialDirectory = file.DirectoryName
        End If
    End Sub

    Private Sub Button1_Click(sender As System.Object, e As System.EventArgs) Handles Button1.Click
        Me.DialogResult = System.Windows.Forms.DialogResult.OK
        Me.Close()
    End Sub


    Private Sub cbCanceled_CheckedChanged(sender As System.Object, e As System.EventArgs) Handles cbCanceled.CheckedChanged

        If cbCanceled.Checked Then

            dtPSCDT.Enabled = True
            dtPSCDT.CustomFormat = "dd/MM/yyyy HH:mm:ss"
            dtPSCDT.Format = System.Windows.Forms.DateTimePickerFormat.Custom

            tbDiscontinuationReasonCodeMeaning.Enabled = True
            tbDiscontinuationReasonCodeValue.Enabled = True
            tbDiscontinuationReasonCodingSchemeDesignator.Enabled = True

            numProcudureStepProgress.Enabled = True

        Else

            dtPSCDT.Enabled = False
            dtPSCDT.CustomFormat = "-"
            dtPSCDT.Format = System.Windows.Forms.DateTimePickerFormat.Custom

            tbDiscontinuationReasonCodeMeaning.Enabled = False
            tbDiscontinuationReasonCodeValue.Enabled = False
            tbDiscontinuationReasonCodingSchemeDesignator.Enabled = False

            numProcudureStepProgress.Enabled = False
        End If


    End Sub

    Private Sub numProcudureStepProgress_KeyUp(sender As System.Object, e As System.Windows.Forms.KeyEventArgs) Handles numProcudureStepProgress.KeyUp
        If (sender.value > numProcudureStepProgress.Minimum OrElse sender.value < numProcudureStepProgress.Maximum) Then

        Else

            numProcudureStepProgress.Value = 1
        End If
    End Sub

    Private Sub dtPPSEDT_ValueChanged(sender As System.Object, e As System.EventArgs) Handles dtPPSEDT.ValueChanged
        dtPPSEDT.CustomFormat = "dd/MM/yyyy HH:mm:ss"

    End Sub

    Private Sub dtPPSSDT_ValueChanged(sender As System.Object, e As System.EventArgs) Handles dtPPSSDT.ValueChanged
        dtPPSSDT.CustomFormat = "dd/MM/yyyy HH:mm:ss"
    End Sub

    Private Sub Button2_Click(sender As System.Object, e As System.EventArgs) Handles Button2.Click
        '        Dim StrExe As String = ""
        'Dim DICOMeditorPath As String = ""

        'Dim Everest_Registry As Microsoft.Win32.RegistryKey = _
        'My.Computer.Registry.CurrentUser.OpenSubKey("Software\Classes\Applications\DICOM Editor.exe")
        'If Everest_Registry Is Nothing Then
        '    'key does not exist
        '    MsgBox("DVTk DICOM editor is not installed on this machine, templates can be found in directory " + templatePath)
        'Else
        '    'key is valid, display actual name

        '    Dim oOpenCmd As Microsoft.Win32.RegistryKey = My.Computer.Registry.CurrentUser.OpenSubKey("Software\Classes\Applications\DICOM Editor.exe\shell\open\command")
        '    StrExe = oOpenCmd.GetValue(Nothing).ToString
        'End If

        'Dim split As String() = StrExe.Split("""""")

        'For Each splitItem As String In split
        '    If (splitItem.Length > 2) Then
        '        If (splitItem.Substring(1, 2) = ":\") Then
        '            DICOMeditorPath = splitItem
        '            Exit For
        '        End If
        '    End If
        'Next

        'If Not DICOMeditorPath = "" Then
        '    Dim startInfo As New System.Diagnostics.ProcessStartInfo
        '    startInfo.FileName = DICOMeditorPath
        '    startInfo.WorkingDirectory = templatePath
        '    System.Diagnostics.Process.Start(startInfo)
        'End If

        Dim newThread As New System.Threading.Thread(AddressOf ThreadMethod)
        newThread.SetApartmentState(Threading.ApartmentState.STA)
        newThread.Start()

        'End If

    End Sub


    Sub ThreadMethod()

        If (OpenFileDialog1.ShowDialog() = DialogResult.OK) Then
            Me.SetText(OpenFileDialog1.FileName)
        End If

    End Sub

    Delegate Sub SetTextCallback(ByVal text As String)

    Private Sub SetText(ByVal [text] As String)

        'InvokeRequired required compares the thread ID of the
        'calling thread to the thread ID of the creating thread.
        'If these threads are different, it returns true.
        If Me.tbNSetTemplatePath.InvokeRequired Then
            Dim d As New SetTextCallback(AddressOf SetText)
            Me.Invoke(d, New Object() {[text]})
        Else

            If ([text].EndsWith(".dcm")) Then
                Me.selectedFile = [text]
                tbNSetTemplatePath.Text = [text]
            Else
                MessageBox.Show("Selected file is not a DICOM file!")
            End If


        End If
    End Sub

End Class