Class CompatibilityRule
    Inherits AttributeRule
    ''' <summary>
    ''' this rule verifies if the value in this attribute is a correct one, according to the value that is provided
    ''' </summary>
    ''' <param name="valueTag">the attribute that needs to be checked</param>
    ''' <param name="value">contains the value which the attribute may have</param>
    ''' <param name="iodType"></param>
    ''' <param name="severity"></param>
    ''' <remarks></remarks>

    Public Sub New(ByVal valueTag As String, ByVal value As String, ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("Compatibility Rule", valueTag, iodType, severity)

        m_Value = value

    End Sub

    Private m_Value As String

    Public Overrides Sub ApplyRule(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal iodType As IODType)
        Dim message As String = ""

        If iodType = IODTypeRule Then
            If Not dicomMessage.Exists(m_TagSequence) Then
                message = "The attribute '" + Tags.GetTagName(m_TagSequence) + "' (" + m_TagSequence + ") is not present in the dataset."
                Me.SetValid(message)
            ElseIf dicomMessage(m_TagSequence).Values.Item(0) = "" Then
                message = "The attribute '" + Tags.GetTagName(m_TagSequence) + "' (" + m_TagSequence + ") of the request dataset contains an empty value."
                Me.SetValid(message)
            ElseIf Not dicomMessage(m_TagSequence).Values.Item(0) = m_Value Then
                message = "The attribute '" + Tags.GetTagName(m_TagSequence) + "' (" + m_TagSequence + ") of the request dataset contains the value: " + dicomMessage(m_TagSequence).Values.Item(0).ToString() + " but should contain the value: " + m_Value + " according the response dataset."
                Me.SetError(message)
            Else
                message = "The attribute '" + Tags.GetTagName(m_TagSequence) + "' (" + m_TagSequence + ") of the request dataset contains the value: " + m_Value + "."
                Me.SetValid(message)
            End If
            Me.Report()
        End If
    End Sub

End Class