Class ConstantValueRule
    Inherits AttributeRule
    ''' <summary>
    ''' This rule determines if the values of an attribute is the same throughout different items, 
    ''' however the last tag should not be present.
    ''' </summary>
    ''' <param name="sequenceItemTag">tag of the sequence item in which the attribute to be checked occurs</param>
    ''' <param name="valueTag">tag of the attribute which should have the sam value</param>
    ''' <param name="iodType"></param>
    ''' <param name="severity"></param>
    ''' <remarks></remarks>
    Public Sub New(ByVal valueTag As String, ByVal sequenceItemTag As String, ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("Constant Value Rule", valueTag, iodType, severity)

        m_SequenceItemTag = sequenceItemTag

    End Sub

    Private m_SequenceItemTag As String

    Public Overrides Sub ApplyRule(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal iodType As IODType)
        Dim message As String = ""

        If iodType = IODTypeRule Then
            If Not dicomMessage.Exists(m_SequenceItemTag) Then
                message = "The attribute '" + Tags.GetTagName(m_SequenceItemTag) + "' (" + m_SequenceItemTag + ") is not present in the dataset."
                Me.SetValid(message)
                Me.Report()
            Else
                Dim NumberOfAtributes As Integer = dicomMessage.DataSet.GetitemCount(m_SequenceItemTag)
                Dim lastElementIsPressent As Boolean = False
                If NumberOfAtributes > 1 Then

                    If Not dicomMessage.Exists(getItemInSQTag(1, m_SequenceItemTag)) Then
                        message = "The attribute '" + Tags.GetTagName(getItemInSQTag(1, m_SequenceItemTag)) + "' (" + getItemInSQTag(1, m_SequenceItemTag) + " is not present in the dataset."
                        Me.SetError(message)
                        Me.Report()
                    Else

                        Dim firstTagValue As String = getItemInSQTag(1, m_SequenceItemTag)
                        If Not dicomMessage.Exists(firstTagValue) Then
                            message = "The attribute '" + Tags.GetTagName(firstTagValue) + "' (" + firstTagValue + ") is not present in the dataset."
                            Me.SetError(message)
                        Else
                            Dim sameValue As Boolean = True
                            For i As Integer = 1 To NumberOfAtributes - 1
                                Dim nextTagValue As String = getItemInSQTag(i + 1, m_SequenceItemTag)
                                If Not dicomMessage.Exists(nextTagValue) Then
                                    If Not (i = NumberOfAtributes - 2) Then
                                        message = "The attribute '" + Tags.GetTagName(nextTagValue) + "' (" + nextTagValue + ") is not present in the dataset."
                                        Me.SetValid(message)
                                        GoTo endRule
                                    Else
                                        lastElementIsPressent = True
                                    End If
                                ElseIf Not dicomMessage(firstTagValue).Values.Item(0) = dicomMessage(nextTagValue).Values.Item(0) Then
                                    sameValue = False
                                End If
                            Next i
                            'here the error/valid report message
                            If (sameValue = True) Then
                                If (lastElementIsPressent) Then
                                    message = "Last Item: '" + Tags.GetTagName(m_TagSequence) + "' (" + m_TagSequence + ") is present in sequence, this should not be the case."
                                    Me.SetError(message)
                                Else
                                    message = "Throughout the different items, attribute: '" + Tags.GetTagName(m_TagSequence) + "' (" + m_TagSequence + ") has the same value: " + dicomMessage(firstTagValue).Values.Item(0) + " ."
                                    Me.SetValid(message)
                                End If
                            Else
                                message = "Throughout the different items, attribute: '" + Tags.GetTagName(m_TagSequence) + "' (" + m_TagSequence + ") has different values:"
                                For i As Integer = 1 To NumberOfAtributes - 1
                                    Dim tagValue As String = getItemInSQTag(i, m_SequenceItemTag)
                                    message = message + " " + i.ToString + ": " + dicomMessage(tagValue).Values.Item(0)
                                Next i
                                message = message + " ."
                                If (lastElementIsPressent) Then
                                    message = message + "Last Item: '" + Tags.GetTagName(m_TagSequence) + "' (" + m_TagSequence + ") is present in sequence, this should not be the case."
                                End If
                                Me.SetError(message)
                            End If

                        End If
                    End If
                Else
                    message = "Only one item is present in attibute: '" + Tags.GetTagName(m_SequenceItemTag) + "' (" + m_SequenceItemTag + ") ."
                    Me.SetValid(message)
                End If
            End If
endRule:
            Me.Report()
        End If
    End Sub
End Class

