Class CFindRsp4InputInformationSequenceRule
    Inherits AttributeRule
    ''' <summary>
    '''    The Input Information Sequence (0040,4021) shall contain reference to a least the following items (additional items may be required for continuation procedures):
    '''1. The RT Plan SOP Instance to be delivered. Its specified location shall be an OST. Note that a specific product implementation could fulfill the roles of both a TMS and an Archive, in which case one AE Title could be used to retrieve all input SOP Instances for the UPS.
    '''2. An RT Beams Delivery Instruction SOP Instance. Its specified location shall be the TMS.
    '''If the Code Value is in the range 121702-121706, one or more RT Image SOP Instance references shall be supplied in the Input Information Sequence (0040,4021).
    '''If the Code Value is in the range 121707-121708, one CT Image Series reference shall be supplied in the Input Information Sequence (0040,4021).
    '''The specified location of the SOP Instances shall be an OST. Note that a specific product implementation could fulfill the roles of both a TMS and an Archive, 
    '''in which case one AE Title could be used to retrieve and store all input and output SOP Instances for the UPS.
    ''' </summary>
    ''' <param name="iodType"></param>
    ''' <param name="severity"></param>
    ''' <remarks></remarks>
    Public Sub New(ByVal iodType As IODType, ByVal severity As ErrorSeverity)

        MyBase.New("Input Information Sequence Rule, for fourth response", Tags.IisRssRssReferencedSOPClassUID, iodType, severity)

    End Sub
    
    Public Overrides Sub ApplyRule(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal iodType As IODType)

        Dim message As String = ""

        If iodType = IODTypeRule Then
            Dim NrOfItems As Integer = 0
            Dim items As Integer = 0
            Dim RTPlanFound As Boolean = False
            Dim RTBeamsDeliveryInstructionFound As Boolean = False
            Dim itemTag As String = ""

            If Not dicomMessage.Exists(Tags.InputInformationSequence) Then
                message = "The attribute: '" + Tags.GetTagName(Tags.InputInformationSequence) + "' (" + Tags.InputInformationSequence + ") is not present"
                Me.SetValid(message)
            Else

                NrOfItems = dicomMessage.DataSet.GetitemCount(Tags.InputInformationSequence)
                For items = 1 To NrOfItems
                    If dicomMessage.Exists(m_TagSequence) Then
                        'raise tag
                        itemTag = getItemInSQTag(items, Tags.InputInformationSequence)
                        If dicomMessage(itemTag).Values.Item(0) = SOPclass.RTPlanDosimetricSOPClassUID Then
                            RTPlanFound = True
                        End If
                        If dicomMessage(itemTag).Values.Item(0) = SOPclass.RTBeamsDeliveryInstructionSOPClassUID Then
                            RTBeamsDeliveryInstructionFound = True
                        End If
                    End If
                Next
                If RTPlanFound = True And RTBeamsDeliveryInstructionFound = True Then
                    message = "References to RT Plan and RT Beams Delivery Instruction found in:  '" + Tags.GetTagName(m_TagSequence) + "' (" + m_TagSequence + ")."
                    Me.SetValid(message)
                Else
                    message = "Reference to RT Plan "
                    If Not RTPlanFound Then message = message + "not "
                    message = message + "found. Reference to RT Beams Delivery Instruction "
                    If Not RTBeamsDeliveryInstructionFound Then message = message + "not "
                    message = message + "found."
                    Me.SetError(message)
                End If
            End If
            Me.Report()

        End If

    End Sub

End Class