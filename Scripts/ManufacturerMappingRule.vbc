Class ManufacturerMappingRule
    Inherits MappingRule

    Private m_mayCopy As Boolean
    Private spatialIODTypeRule As IODType
    Private m_tagSequence As String
    Private dialogResult As Integer = 0
    Private count As Integer = 0
    Private spatialRegistrationArray() As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = Nothing

    Public Sub New(ByVal tagName As String, ByVal severity As ErrorSeverity)
        MyBase.New("Manufacturer Mapping Rule", IODType.RTStructureSet, severity)
        m_tagSequence = tagName
        Me.spatialIODTypeRule = IODType.SpatialRegistration
    End Sub

    Public Sub New(ByVal tagName As String, ByVal severity As ErrorSeverity, ByVal dialogResult As DialogResult)
        MyBase.New("Manufacturer Mapping Rule", IODType.SpatialRegistration, severity)
        m_tagSequence = tagName
        Me.spatialIODTypeRule = IODType.SpatialRegistration
        Me.dialogResult = dialogResult
    End Sub

    Public Sub New(ByVal tagName As String, ByVal severity As ErrorSeverity, ByVal iodType As IODType, ByVal extra As String)
        MyBase.New("Manufacturer Mapping Rule", iodType, severity)
        m_tagSequence = tagName
        Me.spatialIODTypeRule = iodType.SpatialRegistration
    End Sub

    Public Overrides Sub ApplyRule(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal iodType As IODType)
        Dim valid As Boolean = False

        If iodType = Me.IODTypeRule Or iodType = Me.spatialIODTypeRule Then
            Dim message As String

            'check if the tags 0x00080070 or 0x00081090 are given, since these are the only 2 valid tags.
            If m_tagSequence.Equals(Tags.Manufacturer) Or m_tagSequence.Equals(Tags.ManufacturersModelName) Then

                Dim refDataSet As DvtkHighLevelInterface.Dicom.Other.DataSet = New DvtkHighLevelInterface.Dicom.Other.DataSet

                'Select the reference test data set tot use
                Select Case iodType
                    Case iodType.RTStructureSet
                        refDataSet = ReferenceDataSet.GetInstance().GetStructureSet().DataSet
                    Case iodType.SpatialRegistration
                        spatialRegistrationArray = ReferenceDataSet.GetInstance.GetSpatialRegistration()
                    Case iodType.CTImage
                        refDataSet = ReferenceDataSet.GetInstance().GetCTImage(1, 1).DataSet
                    Case iodType.MRImage
                        refDataSet = ReferenceDataSet.GetInstance().GetSliceImage(1, 1, iodType.MRImage).DataSet
                    Case iodType.PETImage
                        refDataSet = ReferenceDataSet.GetInstance().GetSliceImage(1, 1, iodType.PETImage).DataSet
                End Select

                If Not dialogResult = 0 And Not spatialRegistrationArray Is Nothing Then
                    spatialRegistrationArray = ReferenceDataSet.GetInstance.GetSpatialRegistration()

                    If dialogResult = 1 Then
                        refDataSet = spatialRegistrationArray(1).DataSet
                    ElseIf dialogResult = 2 Then
                        refDataSet = spatialRegistrationArray(0).DataSet
                    ElseIf dialogResult = 3 Then
                        If count = 0 Then
                            refDataSet = spatialRegistrationArray(1).DataSet
                            count = 1
                        Else
                            refDataSet = spatialRegistrationArray(0).DataSet
                        End If
                    ElseIf dialogResult = 4 Then
                        If count = 0 Then
                            refDataSet = spatialRegistrationArray(0).DataSet
                            count = 1
                        Else
                            refDataSet = spatialRegistrationArray(1).DataSet
                        End If

                    ElseIf dialogResult = 5 Then
                        refDataSet = spatialRegistrationArray(0).DataSet
                    ElseIf dialogResult = 6 Then
                        refDataSet = spatialRegistrationArray(1).DataSet
                    End If
                End If

                'Check for presence of the tag that needs to be checked
                If Not dicomMessage.Exists(m_tagSequence) Then
                    message = "The attribute: '" + Tags.GetTagName(m_tagSequence) + "' (" + m_tagSequence + ") is not present."

                    'Check if the tag values are not the same
                Else
                    If refDataSet(m_tagSequence).Values(0).Equals(dicomMessage(m_tagSequence).Values(0)) Then
                        If m_tagSequence.Equals(Tags.Manufacturer) Then
                            message = "Critical attribute mapping: the attribute: '" + Tags.GetTagName(m_tagSequence) + "' " + "' (" + m_tagSequence + ") has value " + dicomMessage(m_tagSequence).Values(0).ToString() + ", The manufacturer should insert their own identifier in this element"
                        Else
                            message = "Critical attribute mapping: the attribute: '" + Tags.GetTagName(m_tagSequence) + "' (" + m_tagSequence + ") has value " + dicomMessage(m_tagSequence).Values(0).ToString() + ", The manufacturer should insert their own model name in this element"
                        End If
                    Else
                        message = "Critical attribute mapping: the attribute: '" + Tags.GetTagName(m_tagSequence) + "' (" + m_tagSequence + ") has new (New Source) value " + dicomMessage(m_tagSequence).Values(0).ToString()
                        valid = True
                    End If
                End If
            Else
                message = "Incorrect tag number " + Tags.GetTagName(m_tagSequence) + "' (" + m_tagSequence + ") when instantiating this rule"
            End If

            If valid Then
                Me.SetValid(message)
            Else
                Me.SetError(message)
            End If

            'Reporter, write to results, if there is anything to report
            Me.Report()
        End If

    End Sub
End Class


