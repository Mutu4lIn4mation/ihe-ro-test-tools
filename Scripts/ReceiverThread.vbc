

' This acts as a Storage SCP emulator
' The MessageHandler1 handles C-STORE-RQ messages
'====================
' This acts as a Storage SCP emulator
' The MessageHandler1 handles C-STORE-RQ messages
'====================
Class ReceiverThread
    Inherits DvtkHighLevelInterface.Dicom.Threads.SCP

    '!!!!!!!!!!!!!!!!!
    Public m_inAssociation As Boolean = False

    'Protected Overloads Sub AfterHandlingReleaseResponse()
    '    MessageBox.Show("released transaction from a;lkjs;dlfkja;ldfkja;lskdfj;lakjsd;flkjasdf")
    'End Sub

    'Protected Overrides Sub Execute()

    '    Me.WaitForCompletion()
    '    Dim theStorageSCP As DvtkHighLevelInterface.Dicom.Threads.SCP = New DvtkHighLevelInterface.Dicom.Threads.SCP
    '    theStorageSCP.Initialize(Me)
    '    theStorageSCP.Options.DeepCopyFrom(Me.Options)
    '    theStorageSCP.Options.Identifier = "SCP"

    '     Add the different MessageHandlers.
    '    theStorageSCP.AddToBack(New MessageHandlerCStore)

    '    theStorageSCP.Start()

    'End Sub

    Public Overrides Sub AfterHandlingAssociateRequest(ByVal associateRq As DvtkHighLevelInterface.Dicom.Messages.AssociateRq)
        m_inAssociation = True
        'MyBase.AfterHandlingAssociateRequest(associateRq)
        'Confirm Explicit little endian transfer syntaxes only
        If Not Me.IsMessageHandled Then
            'determine supported transfer syntaxes
            Dim supportedTransferSyntaxes(TestToolConfiguration.GetInstance.SupportedTransferSyntaxesReceiver.Count) As [String]
            TestToolConfiguration.GetInstance.SupportedTransferSyntaxesReceiver.CopyTo(supportedTransferSyntaxes, 0)

            'respond with the supported transfer syntaxes
            'SendAssociateAc(New DvtkHighLevelInterface.Dicom.Other.TransferSyntaxes("1.2.840.10008.1.2.1"))
            SendAssociateAc(New DvtkHighLevelInterface.Dicom.Other.TransferSyntaxes(supportedTransferSyntaxes))
            IsMessageHandled = True
        End If
    End Sub

    Public Overrides Sub AfterHandlingReleaseRequest(ByVal releaseRq As DvtkHighLevelInterface.Dicom.Messages.ReleaseRq)
        MyBase.AfterHandlingReleaseRequest(releaseRq)
        m_inAssociation = False
    End Sub

End Class ' ReceiverThread
'==========================

Class MessageHandlerCStore
    Inherits DvtkHighLevelInterface.Dicom.Threads.MessageHandler

    'DimseCommand.CSTORERSP
    Public Overrides Function HandleCStoreRequest(ByVal theDicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage) As Boolean
        Dim dicomMessageToSend As DvtkHighLevelInterface.Dicom.Messages.DicomMessage = New DvtkHighLevelInterface.Dicom.Messages.DicomMessage(DvtkData.Dimse.DimseCommand.CSTORERSP)
        dicomMessageToSend.Set("0x00000900", DvtkData.Dimse.VR.US, 0) ' Status.
        Send(dicomMessageToSend)

        Return (True)

    End Function

End Class
