Class MessageHandlerNAction
    Inherits DvtkHighLevelInterface.Dicom.Threads.MessageHandler

    Private Sub CopyInterRelationAttributes(ByVal requestMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal responseMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage)

        ' Fill Affected SOP Instance UID  (0000,1000)
        Dim value As String = requestMessage(Tags.RequestedSOPInstanceUID).Values.Item(0)
        responseMessage.Set(Tags.AffectedSOPInstanceUID, DvtkData.Dimse.VR.UI, value)

        ' Copy  Unified Procedure Step State  (0074,1000)
        value = requestMessage(Tags.ProcedureStepState).Values.Item(0)
        responseMessage.Set(Tags.ProcedureStepState, DvtkData.Dimse.VR.CS, value)

    End Sub

    'DimseCommand.NACTIONRSP
    Public Overrides Function HandleNActionRequest(ByVal dicomMessage As DicomMessage) As Boolean

        Dim requestedSOPClassUID As String = dicomMessage.CommandSet.Item(Tags.RequestedSOPClassUID).Values(0)
        If requestedSOPClassUID = SOPclass.UnifiedProcedureStepPushSOPClassUID.ToString() Then

            Dim dicomMessageToSend As DicomMessage = MessageHandlerHelper.CreateResponseMessage(DvtkData.Dimse.DimseCommand.NACTIONRSP, dicomMessage)

            dicomMessageToSend.Set(Tags.ActionTypeID, US, "1")

            'Dim upsState As String = dicomMessage.DataSet.Item(Tags.ProcedureStepState).Values(0)
            'dicomMessageToSend.Set(Tags.ProcedureStepState, CS, upsState)

            'If upsState = "COMPLETED" Then
            '    dicomMessageToSend.Set(Tags.UPSProgressInformationUnifiedProcedureStepProgress, DS, 100)
            'ElseIf upsState = "CANCELED" Then
            '    dicomMessageToSend.Set(Tags.UPSProgressInformationUnifiedProcedureStepProgress, DS, ReferenceDataSet.GetInstance.ReceivedProgress)
            'End If

            'dicomMessageToSend.Set(Tags.TransactionUID, UI, getTransactionUID(dicomMessage)) 'TransactionUID
            dicomMessageToSend.Set(Tags.StatusCommandElement, US, 0) ' Status 

            'CopyInterRelationAttributes(dicomMessage, dicomMessageToSend)
            Dim value As String = dicomMessage(Tags.RequestedSOPInstanceUID).Values.Item(0)
            dicomMessageToSend.Set(Tags.AffectedSOPInstanceUID, DvtkData.Dimse.VR.UI, value)

            Send(dicomMessageToSend, dicomMessage.EncodedPresentationContextID)

            'The RO-60 request will allways send IN PROGRESS, RO-65 uses values COMPLETED en CANCELLED
            If dicomMessage.DataSet(Tags.ProcedureStepState).Values(0).Equals("IN PROGRESS") Then
                DataSetHandler.SaveDatasetToFile(dicomMessage.DataSet, DataSetHandler.UPSCacheXMLFileName, "N-ACTION-REQ-RO60")
            End If

            Return True

        Else
            Throw New Exception(String.Format("Handling N-ACTION RQ of Requested SOP Class UID '{0}' not supported", requestedSOPClassUID))
        End If

    End Function

    Private Function getTransactionUID(ByVal rspMessage As DicomMessage) As String

        Dim retVal As String = ""
        Dim rspSopInstanceUID As String = rspMessage.CommandSet(Tags.RequestedSOPInstanceUID).Values(0)

        'load C-Find-Rsp from refDataSet
        Dim cmpSopInstanceUID As String = DataSetHandler.GetAttributeValueFromDataSet(DataSetHandler.UPSMessagesXMLFileName, "C-FIND-RSP", Tags.SOPInstanceUID)
        If (rspSopInstanceUID = cmpSopInstanceUID) Then
            retVal = DataSetHandler.GetAttributeValueFromDataSet(DataSetHandler.UPSMessagesXMLFileName, "N-ACTION-RSP-RO60", Tags.TransactionUID)
        End If

        Return retVal

    End Function

End Class