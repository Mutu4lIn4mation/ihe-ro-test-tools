Class InterRelationRule
    Inherits MappingRule

    Private m_sourceTag As String
    Private m_targetTag As String
    Private m_sourceMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage

    ''' <summary>
    ''' Compares the value of 2 given tags in 2 given datasets
    ''' </summary>
    ''' <param name="sourceMessage">The source DicomMessage</param>
    ''' <param name="sourceTag">The Tag for the source dataset.</param>
    ''' <param name="targetTag">The Tag for the target dataset.</param>
    ''' <param name="iodType"></param>
    ''' <param name="severity"></param>
    ''' <remarks></remarks>
    Public Sub New(ByVal sourceMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal sourceTag As String, ByVal targetTag As String, ByVal iodType As IODType, ByVal severity As ErrorSeverity)
        MyBase.New("Inter Relation Rule", iodType, severity)
        m_sourceMessage = sourceMessage
        m_sourceTag = sourceTag
        m_targetTag = targetTag
    End Sub


    Public Overrides Sub ApplyRule(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal iodType As IODType)

        Dim sourceValue As String = ""
        Dim targetValue As String = ""
        Dim errorEncountered As Boolean = False

        If iodType = IODTypeRule Then
            ' If source tag exists, get it's value:
            If m_sourceMessage.Exists(m_sourceTag) Then
                sourceValue = m_sourceMessage(m_sourceTag).Values(0)
            Else
                Me.SetError("The Attribute: " + Tags.GetTagName(m_sourceTag) + "'(" + m_sourceTag + ") is not present in the source message.")
                errorEncountered = True
            End If

            ' If target tag exist in received dataset, get it's value
            targetValue = getValueOfTag(dicomMessage, m_targetTag)
            If targetValue Is Nothing Then
                Me.SetError("The Attribute: " + Tags.GetTagName(m_targetTag) + "'(" + m_targetTag + ") is not present in the received message.")
                errorEncountered = True
            End If

            If Not errorEncountered Then
                If (sourceValue = targetValue) Then
                    Me.SetValid("The Attribute: '" + Tags.GetTagName(m_targetTag) + "'(" + m_targetTag + ") with value: " + targetValue + " in the received message is the same as Attribute '" + Tags.GetTagName(m_sourceTag) + "'(" + m_sourceTag + ") in the reference message.")
                Else
                    Me.SetError("The Attribute: '" + Tags.GetTagName(m_targetTag) + "'(" + m_targetTag + ") with value: " + targetValue + " in the received DataSet is NOT the same as Attribute '" + Tags.GetTagName(m_sourceTag) + "'(" + m_sourceTag + ") in the reference message with value: " + sourceValue + ".")
                End If
            End If
            Me.Report()
        End If
    End Sub

    ' Checks if the given tag is present in the Commandset or the DataSet of the Dicom Message and returns the value. 
    ' If tag is not present in both, 'Nothing' is returned
    Private Function getValueOfTag(ByRef dicomMessage As DvtkHighLevelInterface.Dicom.Messages.DicomMessage, ByVal tag As String) As String
        Dim retVal As String = Nothing

        If (dicomMessage.DataSet.Exists(tag)) Then
            retVal = dicomMessage.DataSet(tag).Values(0)
        ElseIf (dicomMessage.CommandSet.Exists(tag)) Then
            retVal = dicomMessage.CommandSet(tag).Values(0)
        End If
        Return retVal

    End Function
End Class

