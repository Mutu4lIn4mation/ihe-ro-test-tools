Class ScenarioRunner

    'has a Reporter
    Protected m_reporter As Reporter = Reporter.GetInstance()

    'Run a test scenario
    Public Function RunScenario(ByRef scenario As Scenario) As Boolean

        Logger.GetInstance().LogMessageWithTimeStamp( _
            String.Format("Starting TPPC IHE-RO Testtool, version {0}", TestToolConfiguration.GetInstance().SoftwareVersion))

        TestToolConfiguration.GetInstance().SetCurrentScenario(scenario)
        Logger.GetInstance().LogMessageWithTimeStamp(String.Format("Running scenario '{0}'", scenario.Name))

        Dim currentScenarioStepName As String = String.Empty

        Try

            If Not String.IsNullOrEmpty(scenario.ScenarioDatasetFile) Then
                LoadScenarioDataset(scenario.ScenarioDatasetFile)
            End If

            'Run the scenario steps
            For Each scenarioStep As ScenarioStep In scenario.ScenarioSteps

                currentScenarioStepName = scenarioStep.Name
                Logger.GetInstance().LogMessageWithTimeStamp(String.Format("Executing scenario step '{0}'", currentScenarioStepName))

                scenarioStep.Execute()

                Logger.GetInstance().LogMessageWithTimeStamp(String.Format("Scenario step '{0}' finished successfully", currentScenarioStepName))

                'performance increase
                GC.Collect()

            Next scenarioStep

        Catch ex As System.Exception

            If Not String.IsNullOrEmpty(currentScenarioStepName) Then
                Logger.GetInstance().LogErrorMessageWithTimeStamp(String.Format("An error occurred while executing scenario '{0}', step '{1}'. " _
                                                                      & "Scenario aborted, reason: {2}", scenario.Name, currentScenarioStepName, ex.Message))
            Else
                Logger.GetInstance().LogErrorMessageWithTimeStamp(String.Format("An error occurred while executing scenario '{0}'. " _
                                                                      & "Scenario aborted, reason: {1}", scenario.Name, ex.Message))

            End If

        End Try

        Logger.GetInstance().LogMessageWithTimeStamp(String.Format("Scenario '{0}' finished successfully.", scenario.Name))

    End Function

    'load scenario dataset
    Protected Sub LoadScenarioDataset(ByVal ScenarioDatasetFile As String)
        Dim result As Boolean
        result = ReferenceDataSet.GetInstance().LoadNewDataSet(ScenarioDatasetFile)
        If (result = False) Then
            Throw New System.Exception("Error loading new data set: " + ScenarioDatasetFile)
        End If
    End Sub

End Class