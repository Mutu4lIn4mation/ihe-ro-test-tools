#If Not DVT_INTERPRETS_SCRIPT Then
Imports System.Windows.Forms
Imports System.Collections.Generic
#End If

Public Class ScenarioSelectionDialog

    Private m_Mapping As New Dictionary(Of ARTO_Scenario, CheckBox)

    Public Sub New()

        ' This call is required by the Windows Form Designer.
        InitializeComponent()

        ' Add any initialization after the InitializeComponent() call.
        InitMapping()

    End Sub

    Public Sub New(ByVal caption As String, ByVal headerText As String)

        MyClass.New()

        Me.Text = caption
        Me.Label1.Text = headerText

    End Sub

    Private Sub InitMapping()

        m_Mapping.Add(ARTO_Scenario.BasicStaticBeam, Me.CheckBoxBasicStaticBeamStorage)
        m_Mapping.Add(ARTO_Scenario.ArcBeam, Me.CheckBoxArcBeamStorage)
        m_Mapping.Add(ARTO_Scenario.MLCVariableApertureArcBeam, Me.CheckBoxMLCVariableApertureArcBeamStorage)
        m_Mapping.Add(ARTO_Scenario.HardWedgeBeam, Me.CheckBoxHardWedgeBeamStorage)
        m_Mapping.Add(ARTO_Scenario.IMATVMATBeam, Me.CheckBoxIMATVMATBeamStorage)
        m_Mapping.Add(ARTO_Scenario.MotorizedWedgeBeam, Me.CheckBoxMotorizedWedgeBeamStorage)
        m_Mapping.Add(ARTO_Scenario.SlidingWindowBeam, Me.CheckBoxSlidingWindowBeamStorage)
        m_Mapping.Add(ARTO_Scenario.StaticElectronBeam, Me.CheckBoxStaticElectronBeamStorage)
        m_Mapping.Add(ARTO_Scenario.StepAndShootBeam, Me.CheckBoxStepandShootBeamStorage)
        m_Mapping.Add(ARTO_Scenario.PhotonApplicatorBeam, Me.CheckBoxPhotonApplicatorBeamStorage)
        m_Mapping.Add(ARTO_Scenario.VirtualWedgeBeam, Me.CheckBoxVirtualWedgeBeamStorage)
        m_Mapping.Add(ARTO_Scenario.PhotonApplicatorArcBeam, Me.CheckBoxPhotonApplicatorArcBeamStorage)
        m_Mapping.Add(ARTO_Scenario.BasicStaticMLCBeam, Me.CheckBoxBasicStaticMLCBeamStorage)
        m_Mapping.Add(ARTO_Scenario.MLCFixedApertureArcBeam, Me.CheckBoxMLCFixedApertureArcBeamStorage)
  
    End Sub

    Public ReadOnly Property SelectedScenarios() As IEnumerable(Of ARTO_Scenario)
        Get

            Dim scenarios As List(Of ARTO_Scenario) = New List(Of ARTO_Scenario)

            For Each kvp As KeyValuePair(Of ARTO_Scenario, CheckBox) In m_Mapping

                If kvp.Value.Checked Then
                    scenarios.Add(kvp.Key)
                End If

            Next

            Return scenarios

        End Get

    End Property

    Private Sub buttonOK_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles buttonOK.Click

        Me.DialogResult = Windows.Forms.DialogResult.OK
        Me.Close()

    End Sub

    Private Sub checkBoxAll_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles checkBoxAll.CheckedChanged

        For Each checkBox As CheckBox In m_Mapping.Values
            checkBox.Checked = Me.checkBoxAll.Checked
        Next

    End Sub

End Class
