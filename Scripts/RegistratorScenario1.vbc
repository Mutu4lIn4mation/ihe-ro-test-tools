Class RegistratorScenario1
    Inherits Scenario
    Private dialog As RegistratorDlg = Nothing

    Public archiveActor As archiveActor = Nothing
    Private send As SendScenarioStep = Nothing
    Private receive As ReceiveScenarioStep = Nothing
    Private validate As ValidateScenarioStep = Nothing
    Private cleanUp As CleanUpScenarioStep = Nothing
    Private CancelClicked As Boolean = False

    'Constructor
    Public Sub New()
        'Show the dialog so that the user can specify which image set(s) is/are sent
        dialog = New RegistratorDlg
        dialog.ShowDialog()
        archiveActor = New ArchiveActor
        send = New SendScenarioStep
        receive = New ReceiveScenarioStep(dialog.RegistratorDialogResult)
        validate = New ValidateScenarioStep(receive, True)
        cleanUp = New CleanUpScenarioStep(TestToolConfiguration.GetInstance.GetSession.ResultsRootDirectory)



        'Set the xml file for the dataset
        m_scenarioDatasetXmlFileName = "NonHybridReferenceDataSet.xml"

        'check if the user has skipped the sending step
        If Not dialog.skipDialogResult Then
            'configure the send scenario step edit to send those files that are in the xml
            send.AddActor(archiveActor)
            Select Case dialog.RegistratorDialogResult
                Case DialogResult.CT_PET
                    send.AddTransaction(New RAD_8_Transaction(IODType.CTImage))
                    send.AddTransaction(New RAD_8_Transaction(IODType.PETImage))
                Case DialogResult.CT_MR
                    send.AddTransaction(New RAD_8_Transaction(IODType.CTImage))
                    send.AddTransaction(New RAD_8_Transaction(IODType.MRImage))
                Case DialogResult.CT_PET_MR
                    send.AddTransaction(New RAD_8_Transaction(IODType.CTImage))
                    send.AddTransaction(New RAD_8_Transaction(IODType.PETImage))
                    send.AddTransaction(New RAD_8_Transaction(IODType.MRImage))
                Case DialogResult.CT_MR_PET
                    send.AddTransaction(New RAD_8_Transaction(IODType.CTImage))
                    send.AddTransaction(New RAD_8_Transaction(IODType.MRImage))
                    send.AddTransaction(New RAD_8_Transaction(IODType.PETImage))
                Case DialogResult.CTPET_MR
                    send.AddTransaction(New RAD_8_Transaction(IODType.CTImage))
                    send.AddTransaction(New RAD_8_Transaction(IODType.PETImage))
                    send.AddTransaction(New RAD_8_Transaction(IODType.MRImage))
                    'MMRO I
                    'send.AddTransaction(New MMRO_2_Transaction(DialogResult.CTPET_MR))
                    'MMRO II
                    send.AddTransaction(New MMRO_II_2_Transaction(DialogResult.CTPET_MR))

                Case DialogResult.CTMR_PET
                    send.AddTransaction(New RAD_8_Transaction(IODType.CTImage))
                    send.AddTransaction(New RAD_8_Transaction(IODType.PETImage))
                    send.AddTransaction(New RAD_8_Transaction(IODType.MRImage))
                    'MMRO I
                    'send.AddTransaction(New MMRO_2_Transaction(DialogResult.CTMR_PET))
                    'MMRO II
                    send.AddTransaction(New MMRO_II_2_Transaction(DialogResult.CTMR_PET))
                Case DialogResult.CANCEL
                    CancelClicked = True
            End Select
        End If

        If Not CancelClicked Then
            'Configurate the receive step
            receive.AddActor(archiveActor)
            Select Case dialog.RegistratorDialogResult
                Case DialogResult.CT_MR
                    'MMRO I
                    'receive.AddTransaction(New MMRO_1_Transaction(DialogResult.CTPET_MR))
                    'MMRO II
                    receive.AddTransaction(New MMRO_II_1_Transaction(DialogResult.CTPET_MR))
                Case DialogResult.CT_PET
                    'MMRO I
                    'receive.AddTransaction(New MMRO_1_Transaction(DialogResult.CTMR_PET))
                    'MMRO II
                    receive.AddTransaction(New MMRO_II_1_Transaction(DialogResult.CTMR_PET))
                Case DialogResult.CTPET_MR
                    'MMRO I
                    'receive.AddTransaction(New MMRO_1_Transaction(DialogResult.CTPET_MR))
                    'MMRO II
                    receive.AddTransaction(New MMRO_II_1_Transaction(DialogResult.CTPET_MR))
                Case DialogResult.CTMR_PET
                    'MMRO I
                    'receive.AddTransaction(New MMRO_1_Transaction(DialogResult.CTMR_PET))
                    'MMRO II
                    receive.AddTransaction(New MMRO_II_1_Transaction(DialogResult.CTMR_PET))
                Case DialogResult.CT_MR_PET
                    'MMRO I
                    'receive.AddTransaction(New MMRO_1_Transaction(DialogResult.CT_MR_PET))
                    'MMRO II
                    receive.AddTransaction(New MMRO_II_1_Transaction(DialogResult.CT_MR_PET))
                Case DialogResult.CT_PET_MR
                    'MMRO I
                    'receive.AddTransaction(New MMRO_1_Transaction(DialogResult.CT_PET_MR))
                    'MMRO II
                    receive.AddTransaction(New MMRO_II_1_Transaction(DialogResult.CT_PET_MR))

                Case Else
                    'MMRO I
                    'receive.AddTransaction(New MMRO_1_Transaction)
                    'MMRO II
                    receive.AddTransaction(New MMRO_II_1_Transaction)
            End Select

            If (dialog.sendBackPETImages.Checked = True) Then
                receive.AddTransaction(New RAD_18_Transaction(IODType.PETImage))
            End If
            If (dialog.sendBackMRImages.Checked = True) Then
                receive.AddTransaction(New RAD_18_Transaction(IODType.MRImage))
            End If

            'Configurate the validate step
            'rules 
            'C.7.1.1 Patient Module

            If dialog.sendBackPETImages.Checked = True Then
                'Patient() 's Name	(0010,0010), same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.PatientName, IODType.PETImage, ErrorSeverity.RuleError, False))
                'Patient ID	(0010,0020), same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.PatientID, IODType.PETImage, ErrorSeverity.RuleError, False))
                'Patient() 's Birthdate	(0010,0030), same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.PatientsBirthDate, IODType.PETImage, ErrorSeverity.RuleError, False))
                'Patient() 's Sex	(0010,0040), same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.PatientSex, IODType.PETImage, ErrorSeverity.RuleError, False))
            End If

            If dialog.sendBackMRImages.Checked = True Then
                'Patient() 's Name	(0010,0010), same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.PatientName, IODType.MRImage, ErrorSeverity.RuleError, False))
                'Patient ID	(0010,0020), same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.PatientID, IODType.MRImage, ErrorSeverity.RuleError, False))
                'Patient() 's Birthdate	(0010,0030), same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.PatientsBirthDate, IODType.MRImage, ErrorSeverity.RuleError, False))
                'Patient() 's Sex	(0010,0040), same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.PatientSex, IODType.MRImage, ErrorSeverity.RuleError, False))
            End If

            'Patient() 's Name	(0010,0010), same as in reference data
            validate.AddRule(New CriticalAttributeMappingRule(Tags.PatientName, IODType.SpatialRegistration, ErrorSeverity.RuleError, False, dialog.RegistratorDialogResult))
            'Patient ID	(0010,0020), same as in reference data
            validate.AddRule(New CriticalAttributeMappingRule(Tags.PatientID, IODType.SpatialRegistration, ErrorSeverity.RuleError, False, dialog.RegistratorDialogResult))
            'Patient() 's Birthdate	(0010,0030), same as in reference data
            validate.AddRule(New CriticalAttributeMappingRule(Tags.PatientsBirthDate, IODType.SpatialRegistration, ErrorSeverity.RuleError, False, dialog.RegistratorDialogResult))
            'Patient() 's Sex	(0010,0040), same as in reference data
            validate.AddRule(New CriticalAttributeMappingRule(Tags.PatientSex, IODType.SpatialRegistration, ErrorSeverity.RuleError, False, dialog.RegistratorDialogResult))

            'C.7.2.1 General Study Module	

            If dialog.sendBackPETImages.Checked = True Then
                'Study Instance UID	(0020,000D), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyInstanceUID, IODType.PETImage, ErrorSeverity.RuleError, False))
                'Study Date	(0008,0020), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyDate, IODType.PETImage, ErrorSeverity.RuleError, False))
                'Study Time	(0008,0030), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyTime, IODType.PETImage, ErrorSeverity.RuleError, False))
                'Referring(Physician)(0008,0090), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.ReferringPhysiciansName, IODType.PETImage, ErrorSeverity.RuleError, False))
                'Study ID	(0020,0010), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyID, IODType.PETImage, ErrorSeverity.RuleError, False))
                'Accession Number	(0008,0050), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.AccessionNumber, IODType.PETImage, ErrorSeverity.RuleError, False))
                'Study Description	(0008,1030), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyDescription, IODType.PETImage, ErrorSeverity.RuleError, False))
            End If
            If dialog.sendBackMRImages.Checked = True Then
                'Study Instance UID	(0020,000D), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyInstanceUID, IODType.MRImage, ErrorSeverity.RuleError, False))
                'Study Date	(0008,0020), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyDate, IODType.MRImage, ErrorSeverity.RuleError, False))
                'Study Time	(0008,0030), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyTime, IODType.MRImage, ErrorSeverity.RuleError, False))
                'Referring(Physician)(0008,0090), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.ReferringPhysiciansName, IODType.MRImage, ErrorSeverity.RuleError, False))
                'Study ID	(0020,0010), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyID, IODType.MRImage, ErrorSeverity.RuleError, False))
                'Accession Number	(0008,0050), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.AccessionNumber, IODType.MRImage, ErrorSeverity.RuleError, False))
                'Study Description	(0008,1030), New value, but maybe the same as in reference data
                validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyDescription, IODType.MRImage, ErrorSeverity.RuleError, False))
            End If

            'Study Instance UID	(0020,000D), New value, but maybe the same as in reference data
            validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyInstanceUID, IODType.SpatialRegistration, ErrorSeverity.RuleError, False, dialog.RegistratorDialogResult))
            'Study Date	(0008,0020), New value, but maybe the same as in reference data
            validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyDate, IODType.SpatialRegistration, ErrorSeverity.RuleError, False, dialog.RegistratorDialogResult))
            'Study Time	(0008,0030), New value, but maybe the same as in reference data
            validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyTime, IODType.SpatialRegistration, ErrorSeverity.RuleError, False, dialog.RegistratorDialogResult))
            'Referring(Physician)(0008,0090), New value, but maybe the same as in reference data
            validate.AddRule(New CriticalAttributeMappingRule(Tags.ReferringPhysiciansName, IODType.SpatialRegistration, ErrorSeverity.RuleError, False, dialog.RegistratorDialogResult))
            'Study ID	(0020,0010), New value, but maybe the same as in reference data
            validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyID, IODType.SpatialRegistration, ErrorSeverity.RuleError, False, dialog.RegistratorDialogResult))
            'Accession Number	(0008,0050), New value, but maybe the same as in reference data
            validate.AddRule(New CriticalAttributeMappingRule(Tags.AccessionNumber, IODType.SpatialRegistration, ErrorSeverity.RuleError, False, dialog.RegistratorDialogResult))
            'Study Description	(0008,1030), New value, but maybe the same as in reference data
            validate.AddRule(New CriticalAttributeMappingRule(Tags.StudyDescription, IODType.SpatialRegistration, ErrorSeverity.RuleError, False, dialog.RegistratorDialogResult))

            'C7.3.1 General Series Module
            'Series Instance UID (0020,000E), must be different form the series defined in the reference data

            If dialog.sendBackPETImages.Checked = True Then
                validate.AddRule(New SeriesInstanceUIDMappingRule(ErrorSeverity.RuleError, IODType.PETImage, True, False, False, False, False, False))
            End If

            If dialog.sendBackMRImages.Checked = True Then
                validate.AddRule(New SeriesInstanceUIDMappingRule(ErrorSeverity.RuleError, IODType.MRImage, True, False, False, False, False, False))
            End If

            If dialog.RegistratorDialogResult = DialogResult.CT_PET Then
                validate.AddRule(New SeriesInstanceUIDMappingRule(ErrorSeverity.RuleError, IODType.SpatialRegistration, True, False, True, False, False, True))
            ElseIf dialog.RegistratorDialogResult = DialogResult.CT_MR Then
                validate.AddRule(New SeriesInstanceUIDMappingRule(ErrorSeverity.RuleError, IODType.SpatialRegistration, True, True, False, False, False, True))
            Else
                validate.AddRule(New SeriesInstanceUIDMappingRule(ErrorSeverity.RuleError, IODType.SpatialRegistration, True, True, True, False, False, True))
            End If

            'C7.4.1 Frame Of reference Module 

            If dialog.sendBackPETImages.Checked = True Then
                validate.AddRule(New SameFrameOfReferenceMappingRule(Tags.FrameofReferenceUID, IODType.PETImage, ErrorSeverity.RuleError, False))
            End If

            If dialog.sendBackMRImages.Checked = True Then
                validate.AddRule(New SameFrameOfReferenceMappingRule(Tags.FrameofReferenceUID, IODType.MRImage, ErrorSeverity.RuleError, False))
            End If


            validate.AddRule(New SameFrameOfReferenceMappingRule(Tags.FrameofReferenceUID, IODType.SpatialRegistration, ErrorSeverity.RuleError, False))

            'C7.5.1 General Equipment module

            If dialog.sendBackPETImages.Checked = True Then
                'Manufacturer (0008,0070) If a new spatial registration object is created, the manufacturer of the equipment
                'producing the new spatial registration object shall insert their identifier in this element
                validate.AddRule(New ManufacturerMappingRule(Tags.Manufacturer, ErrorSeverity.RuleError, IODType.PETImage, ""))
                'Manufacturer (0008,1090) If a new structure set is created from a previous structure set, the manufacturer of the equipment
                'producing the new structure set shall insert their identifier in this element
                validate.AddRule(New ManufacturerMappingRule(Tags.ManufacturersModelName, ErrorSeverity.RuleError, IODType.PETImage, ""))
            End If
            If dialog.sendBackMRImages.Checked = True Then
                'Manufacturer (0008,0070) If a new spatial registration object is created, the manufacturer of the equipment
                'producing the new spatial registration object shall insert their identifier in this element
                validate.AddRule(New ManufacturerMappingRule(Tags.Manufacturer, ErrorSeverity.RuleError, IODType.MRImage, ""))
                'Manufacturer (0008,1090) If a new structure set is created from a previous structure set, the manufacturer of the equipment
                'producing the new structure set shall insert their identifier in this element
                validate.AddRule(New ManufacturerMappingRule(Tags.ManufacturersModelName, ErrorSeverity.RuleError, IODType.MRImage, ""))
            End If

            'Manufacturer (0008,0070) If a new spatial registration object is created, the manufacturer of the equipment
            'producing the new spatial registration object shall insert their identifier in this element
            validate.AddRule(New ManufacturerMappingRule(Tags.Manufacturer, ErrorSeverity.RuleError, dialog.RegistratorDialogResult))
            'Manufacturer (0008,1090) If a new structure set is created from a previous structure set, the manufacturer of the equipment
            'producing the new structure set shall insert their identifier in this element
            validate.AddRule(New ManufacturerMappingRule(Tags.ManufacturersModelName, ErrorSeverity.RuleError, dialog.RegistratorDialogResult))

            'C12.1 Common Module
            'Specific Character Set (0008,0005) if present shall be the value "ISO_IR 100".
            validate.AddRule(New ValueRule(Tags.SpecificCharacterSet, "ISO_IR 100", IODType.SpatialRegistration, ErrorSeverity.RuleError))
            'SOP Class UID (0008,0016) if present shall be the value "1.2.840.10008.5.1.4.1.1.66.1".
            validate.AddRule(New ValueRule(Tags.SOPClassUID, SOPclass.SpatialRegistrationSOPClassUID, IODType.SpatialRegistration, ErrorSeverity.RuleError))

            'C.20.1 Spatial Registration Series Module
            'Modality (0008,0060) shall be the value "REG".
            validate.AddRule(New IsRequiredRule(Tags.Modality, IODType.SpatialRegistration, ErrorSeverity.RuleError))
            validate.AddRule(New ValueRule(Tags.Modality, "REG", IODType.SpatialRegistration, ErrorSeverity.RuleError))

            'C.20.2 Spatial Registration
            'Registration sequence (0070,0308) must contain exactly 2 items
            validate.AddRule(New NrIntOfSequenceItemRule(Tags.RegistrationSequence, 2, IODType.SpatialRegistration, ErrorSeverity.RuleError))

            'each item in (0070,0308) must contain 1 item in (0070,0309)
            validate.AddRule(New NrIntOfSequenceItemRule(Tags.MatrixRegistrationSequence, 1, IODType.SpatialRegistration, ErrorSeverity.RuleError))
            validate.AddRule(New NrIntOfSequenceItemRule(Tags.MatrixRegistrationSequence2, 1, IODType.SpatialRegistration, ErrorSeverity.RuleError))

            'each item in (0070,0309) must contain 1 item in (0070,030A)
            validate.AddRule(New NrIntOfSequenceItemRule(Tags.MatrixSequence, 1, IODType.SpatialRegistration, ErrorSeverity.RuleError))
            validate.AddRule(New NrIntOfSequenceItemRule(Tags.MatrixSequence2, 1, IODType.SpatialRegistration, ErrorSeverity.RuleError))
            'each item in (0070,030A) must contain a 4x4 matrix in (3006,00C6) of which the last 4 positions are 0/0/0/1
            validate.AddRule(New CorrectMatrixRule(Tags.FrameofReferenceTransformationMatrix, IODType.SpatialRegistration, ErrorSeverity.RuleError))
            validate.AddRule(New CorrectMatrixRule(Tags.FrameofReferenceTransformationMatrix2, IODType.SpatialRegistration, ErrorSeverity.RuleError))
            'the matrix in the first item in the registration sequence must contain the values 1/0/0/0/0/1/0/0/0/0/1/0/0/0/0/1
            validate.AddRule(New CorrectIdentityMatrixRule(Tags.FrameofReferenceTransformationMatrix, IODType.SpatialRegistration, ErrorSeverity.RuleError))
            'the matrix in the second item in the registration sequence must contain the same values as the registration item in the reference dataset
            validate.AddRule(New CorrectExpectedMatrixRule(Tags.FrameofReferenceTransformationMatrix2, IODType.SpatialRegistration, ErrorSeverity.RuleError))
            'the value of the frame of reference UID must be the same both in the base of the object and in the first registration object
            validate.AddRule(New EqualToRule(Tags.FrameofReferenceUID, IODType.SpatialRegistration, ErrorSeverity.RuleError, Tags.RegistrationFrameofReferenceUID))
            'check for each of the FoRUIDs whether there is an image with the same FoRUID
            validate.AddRule(New SameFrameOfReferenceMappingRule(Tags.RegistrationFrameofReferenceUID, IODType.SpatialRegistration, ErrorSeverity.RuleError, False))
            validate.AddRule(New SameFrameOfReferenceMappingRule(Tags.RegistrationFrameofReferenceUID2, IODType.SpatialRegistration, ErrorSeverity.RuleError, False))

            'MMRO I
            'the referenced image sequence (0008,1140) must not exist
            'validate.AddRule(New NotPresentRule(Tags.ReferencedImageSequence, IODType.SpatialRegistration, ErrorSeverity.RuleError))
            'validate.AddRule(New NotPresentRule(Tags.ReferencedImageSequence2, IODType.SpatialRegistration, ErrorSeverity.RuleError))

            'MMRO 2
            'the referenced image sequence (0008,1140) items must reference to the correct image sets
            validate.AddRule(New ReferencedImageSequenceRule(IODType.SpatialRegistration, ErrorSeverity.RuleError, dialog.RegistratorDialogResult))

            'Frame of Reference Transformation Matrix Type (0070,030C) if present shall be the value "RIGID".
            validate.AddRule(New IsRequiredRule(Tags.FrameofReferenceTransformationMatrixType, IODType.SpatialRegistration, ErrorSeverity.RuleError))
            validate.AddRule(New ValueRule(Tags.FrameofReferenceTransformationMatrixType, "RIGID", IODType.SpatialRegistration, ErrorSeverity.RuleError))

            'Add the scenario steps in the correct order
            If Not dialog.skipDialogResult Then
                m_scenarioSteps.Add(send)
            End If
            m_scenarioSteps.Add(receive)
            m_scenarioSteps.Add(validate)

            If TestToolConfiguration.GetInstance.DoCleanUp = True Then
                m_scenarioSteps.Add(cleanUp)
            End If

        End If

    End Sub
End Class
